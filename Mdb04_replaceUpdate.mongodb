//=================================================================
//            findOneAndUpdate - findOneAndReplace
//=================================================================

// A - findOneAndReplace() 
//----------------------------
//   1-) belirtilen koşullara uyan ilk sorguyu bulur ve degistirir. 
//   2-) Komut icerisinde belirtilen kisimlari guncellerken bos birakilan 
//       alanlari kaldirir. (API'lerdeki PUT metoduna benzetilebilir).
//   3-) Islem sonunda VSCODE ilgili dokumanin guncellenMEmiş halini gosterir.yani ben bunu değiştirdim diye haber veriyor
//   4-) SYNTAX
//        db.collection.findOneAndReplace( {filter,old field}, {replacement}, {options} ) -->{filter,old field}, {replacement}->zorunlu {filter}, {replacement}, {options}->opsionel   
//       
// B - findOneAndUpdate() 
//----------------------------
///  1-) Belirtilen koşullara uyan ilk sorguyu bulur ve degistirir. 
//   2-) Komut icerisinde belirtilen kisimlari guncellerken bos birakilan 
//       alanlari modifiye etmez  (API'lerdeki PACTH metoduna benzetilebilir).
//   3-) komutun kosul kismindan sonra degislikileri gerceklestirmek icin bir 
//       atomic operator kullanilir. ($set (direk değer verilirse), $inc(arttırma azaltma), $mul (çarpma)vb.)
//   4)  Islem sonunda VSCODE ilgili dokumanin guncellenMEmiş halini gosterir.
//   5-) SYNTAX
//       db.collection.findOneAndUpdate( {filter,old field}, {update->$set:{}}, {options} ) ******************
//=================================================================


use("GOOGLE");
db.personel.insertMany([
 {"name":"Ali Bak", "salary": 5000, "start_date":new Date('2014-03-01')},
 {"name":"Can Tak", "salary": 7500, "start_date":new Date('2011-03-04')},
 {"name":"Veli Gel", "salary": 3550, "start_date":new Date('2013-03-01')},
 {"name":"Can Yak", "salary": 4800, "start_date":new Date('2011-09-30')},
 {"name":"Veli Git", "salary": 7200, "start_date":new Date('2007-12-06')},
 {"name":"Ali Han", "salary": 5250, "start_date":new Date('2004-11-21')},
 {"name":"Ayse Gel", "salary": 10500, "start_date":new Date('1990-07-23')},
 {"name":"Su Ak", "salary": 3300, "start_date":new Date('1999-03-30')},
  ]);

// -----------------------------------------------------------------
//  QUERY 01 ... salary'si 5000 'den az olan ilk personelin salary'sini 6000 TL yapiniz.
// -----------------------------------------------------------------
use("GOOGLE");
db.personel.findOneAndReplace(
                                {salary:{$lt:5000}},  // filter
                                {salary:6000}         // replacement
                             )  // bu komutta Replace metodu kullanıldıgı için sadece maas güncellendi am sism ve diğer fieldler tamamen silinmiş oldu
// -----------------------------------------------------------------
//  QUERY 02 ... salary'si 5250 olan ilk personelin salaryi'sni 15000, ismini "Haluk" ve 
//               start_date su an olarak değiştiriniz.
// -----------------------------------------------------------------
use("GOOGLE");
db.personel.findOneAndReplace(
                                {salary::5250},  // filter
                                {salary:15000,name:"Haluk", start_date: new Date()}   // replacement
                             ) 


// -----------------------------------------------------------------
//  QUERY 03 ... salary'si en az olan personelin adini, noname, start_date'i
//               nodate, salary'sini ise 0 yapiniz.
// -----------------------------------------------------------------
use("GOOGLE");
db.personel.findOneAndReplace(
                                {},  // filter
                                {salary:0,name:"noname", start_date: noDate}   // replacement
                                {sort:{salary:1}} // optional case --> filter işlemi için sort yapacak
                             ) 
// bu metodda optional kısmı varsa önce o çalışır yani sort eder. daha sonra filter ve replacement kısmı çalışır.


// -----------------------------------------------------------------
//  QUERY 04 ... salary'si 7200 olan personelin sadece salary'sini 8000 yapiniz, (diger datalarını koruyunuz)
// -----------------------------------------------------------------
use("GOOGLE");
db.personel.findOneAndUpdate(
                                {salary::7200},  // filter
                                {$set:{salary:8000}}   // update
                             ) 


// -----------------------------------------------------------------
// QUERY 05 ... salary'si 5000 veya ismi "Veli Git" olan personelin salary'sini 9000 , ismini MUZAFFER olarak değiştir.
//              (diger datalarını koruyunuz)
// -----------------------------------------------------------------
use(“GOOGLE”);
db.personel.findOneAndUpdate(
                              {$or:[{salary:5000},{name:“Veli Git”}]},//filter -> değişecek field
                              {$set:{salary:9000,name:“Muzaffer”}}//update -> değişim
                              )


//-----------------------------------------------------------------
// QUERY 06 ... salary'si 7500 olan personelin salary'sine %10 zam yapiniz, 
//               (diger datalarını koruyunuz)
//-----------------------------------------------------------------
use(“GOOGLE”);
db.personel.findOneAndUpdate(
                              {salary:7500},//filter -> değişecek field
                              {$mul:{salary:1.1}}//update -> değişim -> $mul:{field:value} field’ı value ile çarp
                              )
   

//-----------------------------------------------------------------
// QUERY 07 ... salary'si 4800 olan personelin salary'sina 500 TL zam yapiniz, 
//              (diger datalarını koruyunuz).azaltmak için -500 yazabiliriz
//-----------------------------------------------------------------
  use(“GOOGLE”);
db.personel.findOneAndUpdate(
                              {salary:4800},//filter -> değişecek field
                              {$inc:{salary:500}}//update -> değişim -> $inc:{field:value} field’ı value kadar arttırır
                              )


// -----------------------------------------------------------------
//  QUERY 08 ... salary'si 15000 olan personelin Adini "Faruk Duyar" ve start_date 
//               su an olarak degisitriniz.Eger boyle bir dokuman yok ise yeni kayit olarak ekleyiniz.
//-------------------------------------
//  NOT: guncelleme (replace veya update) isleminde sorgu ile 
//       eslesmeme durumu oldugunda dokumanin olusturulmasi istenirse
//       {upsert:true} kullanilmalidir. VsCode console null return eder, compass ta datayı insert eder.

use(“GOOGLE”);
db.personel.findOneAndUpdate(
                              {salary:20000},//filter -> değişecek field
                              {$set:{name:“Faruk Duyar”,start_date:new Date()}},//update -> değişim kadar arttırır
                              {upsert:true}//optional case
                              )


// =================================================================
//            updateOne - updateMany - update (depreceated)
// 
//   update komutlari ile de bir dokumandaki bigilerin bir kismi yada
//   tamami guncellenebilir. update komutlari findOneAndUpdate komutuna
//   gore daha hizli calisir. Bunun sebebi bu komutlarin sorguyu cevap
//   olarak dondurmemesidi db'den data çekmemesidir. Sorgunun elemanları lazım değilse bu 
//   komutlar sadece istatistik olarak kisa bilgiler dondurur.
// =================================================================

// -----------------------------------------------------------------
//  QUERY 09 ... ismi Can Tak olan personelin salary'sini 12000'e guncelleyiniz.
// -----------------------------------------------------------------
use(“GOOGLE”);
db.personel.updateOne(
                      {name:“Can Tak”},//filter -> değişecek field
                      {$set:{salary:12000}}//update -> değişim kadar arttırır
                      )


// -----------------------------------------------------------------
//  QUERY 10 ... salary'si 15000 olan personellerin dokumanina prim:1000 bilgisini ekleyiniz.
// -----------------------------------------------------------------
use(“GOOGLE”);
db.personel.updateOne(
                      {salary:15000},//filter -> değişecek field
                      {$set:{prim:1000}}//update -> değişim kadar arttırır
                      )


//-----------------------------------------------------------------
// QUERY 11 ... salary'si 5000 olan personellerin dokumanina prim:200 bilgisini
//              eger boyle bir personel yok ise (upsert:true) yeni bir kayit aciniz.yeni açılacağı için id li yazdırdı consol da
//-----------------------------------------------------------------

use(“GOOGLE”);
db.personel.updateOne(
                      {salary:5000},//filter -> değişecek field
                      {$set:{prim:2000}},//update -> değişim kadar arttırır
                      {upsert:true}
                      )

//-----------------------------------------------------------------
// QUERY 12 ... key adını değiştirme. bütün dökümanların field ad larını değiştirelim
//-----------------------------------------------------------------
use(“GOOGLE”);
db.personel.updateMany(
                      {},//filter -> değişecek field
                      {$rename:{“name”:“isim”,salary:“maas”,start_date:“ise_giris_tarihi”}}//update -> değişim kadar arttırır
                      )


//=================================================================
// deleteOne - deleteMany - (update-remove =depreceated=kullanımdan kalktı ocak 2022 de )
//=================================================================

//-----------------------------------------------------------------
// QUERY 13 ... ismi Mehmet Can olan kaydi siliniz. 
//-----------------------------------------------------------------
use(“GOOGLE”);
db.personel.deleteOne({isim:“Can Yak”})


//-----------------------------------------------------------------
// QUERY 14 ... maasi 15000 olan dokumanlari siliniz. 
//-----------------------------------------------------------------


//-----------------------------------------------------------------
// QUERY 15 ... Tum dokumanlari siliniz. 
//-----------------------------------------------------------------
use(“GOOGLE”);
db.personel.deleteMany({})


